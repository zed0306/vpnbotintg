from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ContentType, ReplyKeyboardMarkup, KeyboardButton
import logging

logger = logging.getLogger(__name__)

# –°–û–ó–î–ê–ï–ú –†–û–£–¢–ï–†
router = Router()

def get_main_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì¶ –ü–æ–¥–ø–∏—Å–∫–∞"), KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
            [KeyboardButton(text="‚≠ê –ë–∞–ª–∞–Ω—Å"), KeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—ã")],
        ],
        resize_keyboard=True
    )

class Register(StatesGroup):
    name = State()
    age = State()
    contact = State()

@router.message(F.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
async def start_register(message: Message, state: FSMContext):
    await state.set_state(Register.name)
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

@router.message(Register.name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Register.age)
    await message.answer("üéÇ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")

@router.message(Register.age)
async def get_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return
        
    await state.update_data(age=message.text)
    await state.set_state(Register.contact)
    await message.answer(
        "üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )

@router.message(Register.contact, F.content_type == ContentType.CONTACT)
async def get_contact(message: Message, state: FSMContext):
    contact = message.contact.phone_number
    await state.update_data(contact=contact)
    data = await state.get_data()
    
    await message.answer(
        f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
        f"‚Ä¢ –ò–º—è: {data.get('name')}\n"
        f"‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {data.get('age')}\n"
        f"‚Ä¢ –ù–æ–º–µ—Ä: {data.get('contact')}",
        reply_markup=get_main_keyboard()
    )
    await state.clear()